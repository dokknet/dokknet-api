AWSTemplateFormatVersion: "2010-09-09"
Description: Dokknet Database Stack

Parameters:
  DeploymentTarget:
    Type: String
    Description: Deployment environment
    AllowedValues:
      - dev
      - staging
      - production

Mappings:
  # DynamoDB tables
  TableNames:
    dev:
      Name: "MainTable-Dev"
    staging:
      Name: "MainTable-Staging"
    production:
      Name: "MainTable-Production"
  #DeletionPolicies:
  #  dev:
  #    Name: Delete
  #  staging:
  #    Name: Snapshot
  #  production:
  #    Name: Retain

Resources:
  # DynamoDB single table pattern
  MainTable:
    Type: AWS::DynamoDB::Table
    # TODO (abiro) Find in map doesn't work here. Use it once it's implemented.
    # Issue: https://github.com/aws-cloudformation/aws-cloudformation-coverage-roadmap/issues/162
    # DeletionPolicy: !FindInMap [DeletionPolicies, !Ref DeploymentTarget, Name]
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      # Explicitly naming the table prevents deletion on update
      # (as opposed to deletion policy which prevents deletion on stack delete)
      TableName: !FindInMap [TableNames, !Ref DeploymentTarget, Name]
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
         PointInTimeRecoveryEnabled: True
      KeySchema:
        -
          AttributeName: "PK"
          KeyType: "HASH"
        -
          AttributeName: "SK"
          KeyType: "RANGE"
      AttributeDefinitions:
        -
          AttributeName: "PK"
          AttributeType: "S"
        -
          AttributeName: "SK"
          AttributeType: "S"
      # If the item has no TTL, omit this property and it won't be deleted.
      TimeToLiveSpecification:
        AttributeName: "ExpiresAt"
        Enabled: true
      GlobalSecondaryIndexes:
        # Inverse index for querying relational data.
        -
          IndexName: "GSI_1"
          KeySchema:
            -
              AttributeName: "SK"
              KeyType: "HASH"
            -
              AttributeName: "PK"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "KEYS_ONLY"
  MainTableReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Sid: ListAndDescribe
            Action:
              - dynamodb:List*
              - dynamodb:DescribeReservedCapacity*
              - dynamodb:DescribeLimits
              - dynamodb:DescribeTimeToLive
            Resource: "*"
          -
            Effect: Allow
            Sid: SpecificTable
            Action:
              - dynamodb:BatchGet*
              - dynamodb:DescribeStream
              - dynamodb:DescribeTable
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:Scan
            Resource: !Sub
              - "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}"
              - TableName: !Ref MainTable
  # Make sure to add read policy also if you use this.
  MainTableReadWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Sid: ListAndDescribe
            Action:
              - dynamodb:List*
              - dynamodb:DescribeReservedCapacity*
              - dynamodb:DescribeLimits
              - dynamodb:DescribeTimeToLive
            Resource: "*"
          -
            Effect: Allow
            Sid: SpecificTable
            Action:
              - dynamodb:BatchGet*
              - dynamodb:DescribeStream
              - dynamodb:DescribeTable
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:Scan

              - dynamodb:BatchWrite*
              - dynamodb:Delete*
              - dynamodb:Update*
              - dynamodb:PutItem
            Resource: !Sub
              - "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}"
              - TableName: !Ref MainTable

Outputs:
  MainTableId:
    Description: DynamoDB main table name
    Value: !Ref MainTable
    Export:
      Name: !Sub "${AWS::StackName}-MainTable"
  MainTableReadWritePolicy:
    Description: DynamoDB main table read&write policy ARN
    Value: !Ref MainTableReadWritePolicy
    Export:
      Name: !Sub "${AWS::StackName}-MainTableReadWritePolicy"
  MainTableReadOnlyPolicy:
    Description: DynamoDB main table read only policy ARN
    Value: !Ref MainTableReadOnlyPolicy
    Export:
      Name: !Sub "${AWS::StackName}-MainTableReadOnlyPolicy"
