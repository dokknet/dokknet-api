[tox]
minversion = 3.0.0
envlist = mypy,py38,linters
skipsdist = True

[testenv]
setenv = TOX_TESTENV = true

[testenv:mypy]
deps =
    -rrequirements/dev-requirements.txt
    -rrequirements/requirements.txt
commands =
    mypy app

[testenv:py38]
deps = -rrequirements/test-requirements.txt
commands =
    python -m unittest discover -v -s tests -p "*_test.py"

# Linters
[testenv:autopep8]
deps =
    autopep8~=1.4
commands =
    autopep8 --in-place -aaa --recursive app tests scripts

[testenv:flake8]
deps = -rrequirements/dev-requirements.txt
commands =
    flake8 --ignore=D100,D104,D105 app

# Ignore some additional errors for test files and scripts
[testenv:flake8_unittest]
deps = {[testenv:flake8]deps}
commands =
    flake8 --ignore=D100,D101,D102,D103,D104,D105 tests scripts

# Flake 8 config
[flake8]
application_import_names = app, tests

[testenv:bandit]
deps = bandit~=1.6
commands =
    bandit -r app

[testenv:coverage]
deps =
    -rrequirements/dev-requirements.txt
    -rrequirements/requirements.txt
commands =
    coverage erase
    coverage run -m unittest discover -q -s app tests -p "*_test.py"
    coverage report --omit=.tox/* --fail-under=100 --show-missing --skip-covered

# CloudFormation lint
[testenv:cfn_lint]
deps = cfn-lint~=0.25
commands =
    cfn-lint ./cloudformation/*.yml

[testenv:linters]
deps =
    -rrequirements/dev-requirements.txt
    -rrequirements/requirements.txt
commands =
    {[testenv:flake8]commands}
    {[testenv:flake8_unittest]commands}
    {[testenv:cfn_lint]commands}
    {[testenv:bandit]commands}
    {[testenv:coverage]commands}
